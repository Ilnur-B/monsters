{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/serch-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handler","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAceA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAML,EAAMG,QAAQG,OACpB,4BAAIN,EAAMG,QAAQI,YCKfC,G,MAVE,SAAAR,GACb,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCGpBO,G,MARG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,QAAf,OACd,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCFGG,E,kDACjB,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTR,SAAU,GACVS,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,S,oBAK/C,WAAU,IAAD,OACL,EAAmCE,KAAKR,MAAhCR,EAAR,EAAQA,SAAWS,EAAnB,EAAmBA,YACbQ,EAAmBjB,EAASkB,QAAO,SAAAxB,GAAO,OAC5CA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYU,kBAEpD,OAEI,sBAAK3B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,iBACZC,QAAS,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAUvB,SAAUiB,W,GA9BHO,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.179f758d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css'\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n            <h2 >{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from \"../card/card.component\";\r\nimport './card-list.style.css'\r\n\r\nconst CardList = props => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CardList\r\n","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, handler}) => (\r\n    <input\r\n        className='search'\r\n        type=\"search\"\r\n        placeholder= {placeholder}\r\n        onChange={handler}/>\r\n)\r\n\r\nexport default SearchBox\r\n","import \"./App.css\";\nimport React, {Component} from \"react\";\n\nimport CardList from './component/card-list/card-list.component';\nimport SearchBox from './component/serch-box/search-box.component'\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({monsters:users}))\n    }\n\n\n\n    render() {\n        const { monsters , searchField } = this.state\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n        return (\n\n            <div className=\"App\">\n                <h1>Monsters catalog</h1>\n                <SearchBox\n                    placeholder='search monster'\n                    handler={e => this.setState({searchField: e.target.value})}\n                />\n                <CardList monsters={filteredMonsters}>\n                </CardList>\n            </div>\n\n\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}